def normalize_incoming_edge_weights(D: nx.DiGraph, node: str, lang="pt"):
    """
    Altera os pesos das arestas que entram em `node`
    subtraindo de cada uma o menor peso de entrada no grafo D.

    Parâmetros:
        - D: Um grafo direcionado (networkx.DiGraph)
        - node: O vértice alvo cujas arestas de entrada serão ajustadas
        - lang: Idioma das mensagens de erro ("en" para inglês, "pt" para português)

    Retorno:
        - Nada (o grafo D é modificado no próprio lugar — in-place)
    """

    if lang == "en":
        assert (
            node in D
        ), f"\nnormalize_incoming_edge_weights: The vertex '{node}' does not exist in the graph."
    elif lang == "pt":
        assert (
            node in D
        ), f"\nnormalize_incoming_edge_weights: O vértice '{node}' não existe no grafo."

    # Get the incoming edges of the node with their weights
    predecessors = list(D.in_edges(node, data="w"))

    if not predecessors:
        return

    # Calculate the minimum weight among the incoming edges
    yv = min((w for _, _, w in predecessors))

    # Subtract Yv from each incoming edge
    for u, _, _ in predecessors:
        D[u][node]["w"] -= yv
